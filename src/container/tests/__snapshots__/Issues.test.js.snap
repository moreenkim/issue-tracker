// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`containers/Issues renders issues and tags correctly 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(Issues)>
        <Issues
          getRepoIssues={[Function]}
          issues={
            Array [
              Object {
                "node": Object {
                  "id": "id",
                  "title": "title",
                },
              },
            ]
          }
          labels={
            Array [
              Object {
                "node": Object {
                  "name": "bugs",
                },
              },
            ]
          }
          loading={false}
          selectedLabels={Array []}
          setLabels={[Function]}
          setLoading={[Function]}
          setSelectedLabels={[Function]}
        >
          <Col
            style={
              Object {
                "marginTop": "1em",
              }
            }
          >
            <div
              className="ant-col"
              style={
                Object {
                  "marginTop": "1em",
                }
              }
            >
              <Row>
                <div
                  className="ant-row"
                  style={Object {}}
                >
                  <Col
                    span={14}
                  >
                    <div
                      className="ant-col ant-col-14"
                      style={Object {}}
                    >
                      <SearchBar
                        enterButtonText="Search"
                        onSearch={[Function]}
                        placeholderText="Enter repository url e.g. owner/repository-name"
                        style={
                          Object {
                            "width": "100%",
                          }
                        }
                      >
                        <Search
                          allowClear={true}
                          enterButton="Search"
                          onSearch={[Function]}
                          placeholder="Enter repository url e.g. owner/repository-name"
                          size="large"
                          style={
                            Object {
                              "width": "100%",
                            }
                          }
                        >
                          <Input
                            addonAfter={
                              <Button
                                className="ant-input-search-button"
                                icon={null}
                                onClick={[Function]}
                                onMouseDown={[Function]}
                                size="large"
                                type="primary"
                              >
                                Search
                              </Button>
                            }
                            allowClear={true}
                            className="ant-input-search ant-input-search-large ant-input-search-with-button"
                            onChange={[Function]}
                            onPressEnter={[Function]}
                            placeholder="Enter repository url e.g. owner/repository-name"
                            prefixCls="ant-input"
                            size="large"
                            style={
                              Object {
                                "width": "100%",
                              }
                            }
                            type="text"
                          >
                            <ClearableLabeledInput
                              addonAfter={
                                <Button
                                  className="ant-input-search-button"
                                  icon={null}
                                  onClick={[Function]}
                                  onMouseDown={[Function]}
                                  size="large"
                                  type="primary"
                                >
                                  Search
                                </Button>
                              }
                              allowClear={true}
                              bordered={true}
                              className="ant-input-search ant-input-search-large ant-input-search-with-button"
                              element={
                                <input
                                  className="ant-input ant-input-lg"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  placeholder="Enter repository url e.g. owner/repository-name"
                                  style={
                                    Object {
                                      "width": "100%",
                                    }
                                  }
                                  type="text"
                                />
                              }
                              focused={false}
                              handleReset={[Function]}
                              inputType="input"
                              onChange={[Function]}
                              onPressEnter={[Function]}
                              placeholder="Enter repository url e.g. owner/repository-name"
                              prefixCls="ant-input"
                              size="large"
                              style={
                                Object {
                                  "width": "100%",
                                }
                              }
                              triggerFocus={[Function]}
                              type="text"
                              value=""
                            >
                              <span
                                className="ant-input-group-wrapper ant-input-group-wrapper-lg ant-input-search ant-input-search-large ant-input-search-with-button"
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                              >
                                <span
                                  className="ant-input-wrapper ant-input-group"
                                >
                                  <span
                                    className="ant-input-affix-wrapper ant-input-affix-wrapper-lg"
                                    onMouseUp={[Function]}
                                    style={null}
                                  >
                                    <input
                                      className="ant-input ant-input-lg"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      placeholder="Enter repository url e.g. owner/repository-name"
                                      style={null}
                                      type="text"
                                      value=""
                                    />
                                    <span
                                      className="ant-input-suffix"
                                    >
                                      <ForwardRef(CloseCircleFilled)
                                        className="ant-input-clear-icon-hidden ant-input-clear-icon"
                                        onClick={[Function]}
                                        role="button"
                                      >
                                        <AntdIcon
                                          className="ant-input-clear-icon-hidden ant-input-clear-icon"
                                          icon={
                                            Object {
                                              "icon": Object {
                                                "attrs": Object {
                                                  "focusable": "false",
                                                  "viewBox": "64 64 896 896",
                                                },
                                                "children": Array [
                                                  Object {
                                                    "attrs": Object {
                                                      "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                    },
                                                    "tag": "path",
                                                  },
                                                ],
                                                "tag": "svg",
                                              },
                                              "name": "close-circle",
                                              "theme": "filled",
                                            }
                                          }
                                          onClick={[Function]}
                                          role="button"
                                        >
                                          <span
                                            aria-label="close-circle"
                                            className="anticon anticon-close-circle ant-input-clear-icon-hidden ant-input-clear-icon"
                                            onClick={[Function]}
                                            role="button"
                                            tabIndex={-1}
                                          >
                                            <IconReact
                                              icon={
                                                Object {
                                                  "icon": Object {
                                                    "attrs": Object {
                                                      "focusable": "false",
                                                      "viewBox": "64 64 896 896",
                                                    },
                                                    "children": Array [
                                                      Object {
                                                        "attrs": Object {
                                                          "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                        },
                                                        "tag": "path",
                                                      },
                                                    ],
                                                    "tag": "svg",
                                                  },
                                                  "name": "close-circle",
                                                  "theme": "filled",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden="true"
                                                data-icon="close-circle"
                                                fill="currentColor"
                                                focusable="false"
                                                height="1em"
                                                key="svg-close-circle"
                                                viewBox="64 64 896 896"
                                                width="1em"
                                              >
                                                <path
                                                  d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                                                  key="svg-close-circle-svg-0"
                                                />
                                              </svg>
                                            </IconReact>
                                          </span>
                                        </AntdIcon>
                                      </ForwardRef(CloseCircleFilled)>
                                    </span>
                                  </span>
                                  <span
                                    className="ant-input-group-addon"
                                  >
                                    <Button
                                      className="ant-input-search-button"
                                      icon={null}
                                      key="enterButton"
                                      onClick={[Function]}
                                      onMouseDown={[Function]}
                                      size="large"
                                      type="primary"
                                    >
                                      <Wave>
                                        <button
                                          className="ant-btn ant-btn-primary ant-btn-lg ant-input-search-button"
                                          onClick={[Function]}
                                          onMouseDown={[Function]}
                                          type="button"
                                        >
                                          <LoadingIcon
                                            existIcon={false}
                                            loading={false}
                                            prefixCls="ant-btn"
                                          >
                                            <CSSMotion
                                              motionName="ant-btn-loading-icon-motion"
                                              onAppearActive={[Function]}
                                              onAppearStart={[Function]}
                                              onEnterActive={[Function]}
                                              onEnterStart={[Function]}
                                              onLeaveActive={[Function]}
                                              onLeaveStart={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            >
                                              <DomWrapper />
                                            </CSSMotion>
                                          </LoadingIcon>
                                          <span
                                            key=".0"
                                          >
                                            Search
                                          </span>
                                        </button>
                                      </Wave>
                                    </Button>
                                  </span>
                                </span>
                              </span>
                            </ClearableLabeledInput>
                          </Input>
                        </Search>
                      </SearchBar>
                    </div>
                  </Col>
                  <Col
                    span={10}
                  >
                    <div
                      className="ant-col ant-col-10"
                      style={Object {}}
                    >
                      <Row>
                        <div
                          className="ant-row"
                          style={Object {}}
                        >
                          <Col
                            span={14}
                          >
                            <div
                              className="ant-col ant-col-14"
                              style={Object {}}
                            >
                              <span
                                style={
                                  Object {
                                    "display": "flex",
                                    "fontSize": "15px",
                                    "justifyContent": "center",
                                    "padding": ".6em 0",
                                  }
                                }
                              >
                                Filter Issues by Status
                              </span>
                            </div>
                          </Col>
                          <Col
                            span={10}
                          >
                            <div
                              className="ant-col ant-col-10"
                              style={Object {}}
                            >
                              <ForwardRef(InternalSelect)
                                allowClear={true}
                                defaultValue="OPEN"
                                onChange={[Function]}
                                size="large"
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                              >
                                <Select
                                  allowClear={true}
                                  className="ant-select-lg"
                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                  defaultValue="OPEN"
                                  dropdownClassName=""
                                  inputIcon={[Function]}
                                  listHeight={256}
                                  listItemHeight={24}
                                  menuItemSelectedIcon={null}
                                  notFoundContent={
                                    <Context.Consumer>
                                      [Function]
                                    </Context.Consumer>
                                  }
                                  onChange={[Function]}
                                  prefixCls="ant-select"
                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                  style={
                                    Object {
                                      "width": "100%",
                                    }
                                  }
                                  transitionName="ant-slide-up"
                                >
                                  <ForwardRef(Select)
                                    allowClear={true}
                                    className="ant-select-lg"
                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                    defaultValue="OPEN"
                                    dropdownClassName=""
                                    inputIcon={[Function]}
                                    listHeight={256}
                                    listItemHeight={24}
                                    menuItemSelectedIcon={null}
                                    notFoundContent={
                                      <Context.Consumer>
                                        [Function]
                                      </Context.Consumer>
                                    }
                                    onChange={[Function]}
                                    prefixCls="ant-select"
                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                    style={
                                      Object {
                                        "width": "100%",
                                      }
                                    }
                                    transitionName="ant-slide-up"
                                  >
                                    <div
                                      className="ant-select ant-select-lg ant-select-single ant-select-allow-clear ant-select-show-arrow"
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      style={
                                        Object {
                                          "width": "100%",
                                        }
                                      }
                                    >
                                      <SelectTrigger
                                        containerWidth={null}
                                        dropdownClassName=""
                                        empty={false}
                                        getTriggerDOMNode={[Function]}
                                        popupElement={
                                          <OptionList
                                            childrenAsData={true}
                                            defaultActiveFirstOption={true}
                                            flattenOptions={
                                              Array [
                                                Object {
                                                  "data": Object {
                                                    "children": "Open",
                                                    "key": null,
                                                    "value": "OPEN",
                                                  },
                                                  "groupOption": false,
                                                  "key": "OPEN",
                                                },
                                                Object {
                                                  "data": Object {
                                                    "children": "Closed",
                                                    "key": null,
                                                    "value": "CLOSED",
                                                  },
                                                  "groupOption": false,
                                                  "key": "CLOSED",
                                                },
                                              ]
                                            }
                                            height={256}
                                            id="rc_select_TEST_OR_SSR"
                                            itemHeight={24}
                                            menuItemSelectedIcon={null}
                                            multiple={false}
                                            notFoundContent={
                                              <Context.Consumer>
                                                [Function]
                                              </Context.Consumer>
                                            }
                                            onActiveValue={[Function]}
                                            onMouseEnter={[Function]}
                                            onSelect={[Function]}
                                            onToggleOpen={[Function]}
                                            options={
                                              Array [
                                                Object {
                                                  "children": "Open",
                                                  "key": null,
                                                  "value": "OPEN",
                                                },
                                                Object {
                                                  "children": "Closed",
                                                  "key": null,
                                                  "value": "CLOSED",
                                                },
                                              ]
                                            }
                                            prefixCls="ant-select"
                                            searchValue=""
                                            values={
                                              Set {
                                                "OPEN",
                                              }
                                            }
                                            virtual={true}
                                          />
                                        }
                                        prefixCls="ant-select"
                                        transitionName="ant-slide-up"
                                      >
                                        <Trigger
                                          action={Array []}
                                          afterPopupVisibleChange={[Function]}
                                          autoDestroy={false}
                                          blurDelay={0.15}
                                          builtinPlacements={
                                            Object {
                                              "bottomLeft": Object {
                                                "offset": Array [
                                                  0,
                                                  4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 0,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tl",
                                                  "bl",
                                                ],
                                              },
                                              "bottomRight": Object {
                                                "offset": Array [
                                                  0,
                                                  4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 0,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tr",
                                                  "br",
                                                ],
                                              },
                                              "topLeft": Object {
                                                "offset": Array [
                                                  0,
                                                  -4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 0,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "bl",
                                                  "tl",
                                                ],
                                              },
                                              "topRight": Object {
                                                "offset": Array [
                                                  0,
                                                  -4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 0,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "br",
                                                  "tr",
                                                ],
                                              },
                                            }
                                          }
                                          defaultPopupVisible={false}
                                          destroyPopupOnHide={false}
                                          focusDelay={0}
                                          getDocument={[Function]}
                                          getPopupClassNameFromAlign={[Function]}
                                          getTriggerDOMNode={[Function]}
                                          hideAction={Array []}
                                          mask={false}
                                          maskClosable={true}
                                          mouseEnterDelay={0}
                                          mouseLeaveDelay={0.1}
                                          onPopupAlign={[Function]}
                                          onPopupVisibleChange={[Function]}
                                          popup={
                                            <div>
                                              <OptionList
                                                childrenAsData={true}
                                                defaultActiveFirstOption={true}
                                                flattenOptions={
                                                  Array [
                                                    Object {
                                                      "data": Object {
                                                        "children": "Open",
                                                        "key": null,
                                                        "value": "OPEN",
                                                      },
                                                      "groupOption": false,
                                                      "key": "OPEN",
                                                    },
                                                    Object {
                                                      "data": Object {
                                                        "children": "Closed",
                                                        "key": null,
                                                        "value": "CLOSED",
                                                      },
                                                      "groupOption": false,
                                                      "key": "CLOSED",
                                                    },
                                                  ]
                                                }
                                                height={256}
                                                id="rc_select_TEST_OR_SSR"
                                                itemHeight={24}
                                                menuItemSelectedIcon={null}
                                                multiple={false}
                                                notFoundContent={
                                                  <Context.Consumer>
                                                    [Function]
                                                  </Context.Consumer>
                                                }
                                                onActiveValue={[Function]}
                                                onMouseEnter={[Function]}
                                                onSelect={[Function]}
                                                onToggleOpen={[Function]}
                                                options={
                                                  Array [
                                                    Object {
                                                      "children": "Open",
                                                      "key": null,
                                                      "value": "OPEN",
                                                    },
                                                    Object {
                                                      "children": "Closed",
                                                      "key": null,
                                                      "value": "CLOSED",
                                                    },
                                                  ]
                                                }
                                                prefixCls="ant-select"
                                                searchValue=""
                                                values={
                                                  Set {
                                                    "OPEN",
                                                  }
                                                }
                                                virtual={true}
                                              />
                                            </div>
                                          }
                                          popupAlign={Object {}}
                                          popupClassName=""
                                          popupPlacement="bottomLeft"
                                          popupStyle={
                                            Object {
                                              "minWidth": null,
                                              "width": null,
                                            }
                                          }
                                          popupTransitionName="ant-slide-up"
                                          prefixCls="ant-select-dropdown"
                                          showAction={Array []}
                                        >
                                          <Selector
                                            accessibilityIndex={0}
                                            activeValue={null}
                                            allowClear={true}
                                            className="ant-select-lg"
                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                            defaultValue="OPEN"
                                            domRef={
                                              Object {
                                                "current": <div
                                                  class="ant-select-selector"
                                                >
                                                  <span
                                                    class="ant-select-selection-search"
                                                  >
                                                    <input
                                                      aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                      aria-autocomplete="list"
                                                      aria-controls="rc_select_TEST_OR_SSR_list"
                                                      aria-haspopup="listbox"
                                                      aria-owns="rc_select_TEST_OR_SSR_list"
                                                      autocomplete="off"
                                                      class="ant-select-selection-search-input"
                                                      id="rc_select_TEST_OR_SSR"
                                                      readonly=""
                                                      role="combobox"
                                                      style="opacity: 0;"
                                                      type="search"
                                                      unselectable="on"
                                                      value=""
                                                    />
                                                  </span>
                                                  <span
                                                    class="ant-select-selection-item"
                                                    title="Open"
                                                  >
                                                    Open
                                                  </span>
                                                </div>,
                                              }
                                            }
                                            dropdownClassName=""
                                            id="rc_select_TEST_OR_SSR"
                                            inputElement={null}
                                            inputIcon={[Function]}
                                            key="trigger"
                                            listHeight={256}
                                            listItemHeight={24}
                                            menuItemSelectedIcon={null}
                                            multiple={false}
                                            notFoundContent={
                                              <Context.Consumer>
                                                [Function]
                                              </Context.Consumer>
                                            }
                                            onChange={[Function]}
                                            onSearch={[Function]}
                                            onSearchSubmit={[Function]}
                                            onSelect={[Function]}
                                            onToggleOpen={[Function]}
                                            prefixCls="ant-select"
                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                            searchValue=""
                                            showSearch={false}
                                            style={
                                              Object {
                                                "width": "100%",
                                              }
                                            }
                                            tokenWithEnter={false}
                                            transitionName="ant-slide-up"
                                            values={
                                              Array [
                                                Object {
                                                  "disabled": undefined,
                                                  "key": "OPEN",
                                                  "label": "Open",
                                                  "value": "OPEN",
                                                },
                                              ]
                                            }
                                          >
                                            <div
                                              className="ant-select-selector"
                                              onClick={[Function]}
                                              onMouseDown={[Function]}
                                            >
                                              <SingleSelector
                                                accessibilityIndex={0}
                                                activeValue={null}
                                                allowClear={true}
                                                className="ant-select-lg"
                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                defaultValue="OPEN"
                                                domRef={
                                                  Object {
                                                    "current": <div
                                                      class="ant-select-selector"
                                                    >
                                                      <span
                                                        class="ant-select-selection-search"
                                                      >
                                                        <input
                                                          aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                          aria-autocomplete="list"
                                                          aria-controls="rc_select_TEST_OR_SSR_list"
                                                          aria-haspopup="listbox"
                                                          aria-owns="rc_select_TEST_OR_SSR_list"
                                                          autocomplete="off"
                                                          class="ant-select-selection-search-input"
                                                          id="rc_select_TEST_OR_SSR"
                                                          readonly=""
                                                          role="combobox"
                                                          style="opacity: 0;"
                                                          type="search"
                                                          unselectable="on"
                                                          value=""
                                                        />
                                                      </span>
                                                      <span
                                                        class="ant-select-selection-item"
                                                        title="Open"
                                                      >
                                                        Open
                                                      </span>
                                                    </div>,
                                                  }
                                                }
                                                dropdownClassName=""
                                                id="rc_select_TEST_OR_SSR"
                                                inputElement={null}
                                                inputIcon={[Function]}
                                                inputRef={
                                                  Object {
                                                    "current": <input
                                                      aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                      aria-autocomplete="list"
                                                      aria-controls="rc_select_TEST_OR_SSR_list"
                                                      aria-haspopup="listbox"
                                                      aria-owns="rc_select_TEST_OR_SSR_list"
                                                      autocomplete="off"
                                                      class="ant-select-selection-search-input"
                                                      id="rc_select_TEST_OR_SSR"
                                                      readonly=""
                                                      role="combobox"
                                                      style="opacity: 0;"
                                                      type="search"
                                                      unselectable="on"
                                                      value=""
                                                    />,
                                                  }
                                                }
                                                listHeight={256}
                                                listItemHeight={24}
                                                menuItemSelectedIcon={null}
                                                multiple={false}
                                                notFoundContent={
                                                  <Context.Consumer>
                                                    [Function]
                                                  </Context.Consumer>
                                                }
                                                onChange={[Function]}
                                                onInputChange={[Function]}
                                                onInputCompositionEnd={[Function]}
                                                onInputCompositionStart={[Function]}
                                                onInputKeyDown={[Function]}
                                                onInputMouseDown={[Function]}
                                                onInputPaste={[Function]}
                                                onSearch={[Function]}
                                                onSearchSubmit={[Function]}
                                                onSelect={[Function]}
                                                onToggleOpen={[Function]}
                                                prefixCls="ant-select"
                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                searchValue=""
                                                showSearch={false}
                                                style={
                                                  Object {
                                                    "width": "100%",
                                                  }
                                                }
                                                tokenWithEnter={false}
                                                transitionName="ant-slide-up"
                                                values={
                                                  Array [
                                                    Object {
                                                      "disabled": undefined,
                                                      "key": "OPEN",
                                                      "label": "Open",
                                                      "value": "OPEN",
                                                    },
                                                  ]
                                                }
                                              >
                                                <span
                                                  className="ant-select-selection-search"
                                                >
                                                  <Input
                                                    accessibilityIndex={0}
                                                    attrs={Object {}}
                                                    editable={false}
                                                    id="rc_select_TEST_OR_SSR"
                                                    inputElement={null}
                                                    onChange={[Function]}
                                                    onCompositionEnd={[Function]}
                                                    onCompositionStart={[Function]}
                                                    onKeyDown={[Function]}
                                                    onMouseDown={[Function]}
                                                    onPaste={[Function]}
                                                    prefixCls="ant-select"
                                                    value=""
                                                  >
                                                    <input
                                                      aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                      aria-autocomplete="list"
                                                      aria-controls="rc_select_TEST_OR_SSR_list"
                                                      aria-haspopup="listbox"
                                                      aria-owns="rc_select_TEST_OR_SSR_list"
                                                      autoComplete="off"
                                                      className="ant-select-selection-search-input"
                                                      id="rc_select_TEST_OR_SSR"
                                                      onChange={[Function]}
                                                      onCompositionEnd={[Function]}
                                                      onCompositionStart={[Function]}
                                                      onKeyDown={[Function]}
                                                      onMouseDown={[Function]}
                                                      onPaste={[Function]}
                                                      readOnly={true}
                                                      role="combobox"
                                                      style={
                                                        Object {
                                                          "opacity": 0,
                                                        }
                                                      }
                                                      type="search"
                                                      unselectable="on"
                                                      value=""
                                                    />
                                                  </Input>
                                                </span>
                                                <span
                                                  className="ant-select-selection-item"
                                                  title="Open"
                                                >
                                                  Open
                                                </span>
                                              </SingleSelector>
                                            </div>
                                          </Selector>
                                        </Trigger>
                                      </SelectTrigger>
                                      <TransBtn
                                        className="ant-select-arrow"
                                        customizeIcon={[Function]}
                                        customizeIconProps={
                                          Object {
                                            "focused": false,
                                            "loading": undefined,
                                            "open": undefined,
                                            "searchValue": "",
                                            "showSearch": false,
                                          }
                                        }
                                      >
                                        <span
                                          aria-hidden={true}
                                          className="ant-select-arrow"
                                          onMouseDown={[Function]}
                                          style={
                                            Object {
                                              "WebkitUserSelect": "none",
                                              "userSelect": "none",
                                            }
                                          }
                                          unselectable="on"
                                        >
                                          <ForwardRef(DownOutlined)
                                            className="ant-select-suffix"
                                          >
                                            <AntdIcon
                                              className="ant-select-suffix"
                                              icon={
                                                Object {
                                                  "icon": Object {
                                                    "attrs": Object {
                                                      "focusable": "false",
                                                      "viewBox": "64 64 896 896",
                                                    },
                                                    "children": Array [
                                                      Object {
                                                        "attrs": Object {
                                                          "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                        },
                                                        "tag": "path",
                                                      },
                                                    ],
                                                    "tag": "svg",
                                                  },
                                                  "name": "down",
                                                  "theme": "outlined",
                                                }
                                              }
                                            >
                                              <span
                                                aria-label="down"
                                                className="anticon anticon-down ant-select-suffix"
                                                role="img"
                                              >
                                                <IconReact
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "down",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    data-icon="down"
                                                    fill="currentColor"
                                                    focusable="false"
                                                    height="1em"
                                                    key="svg-down"
                                                    viewBox="64 64 896 896"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                      key="svg-down-svg-0"
                                                    />
                                                  </svg>
                                                </IconReact>
                                              </span>
                                            </AntdIcon>
                                          </ForwardRef(DownOutlined)>
                                        </span>
                                      </TransBtn>
                                      <TransBtn
                                        className="ant-select-clear"
                                        customizeIcon={<ForwardRef(CloseCircleFilled) />}
                                        onMouseDown={[Function]}
                                      >
                                        <span
                                          aria-hidden={true}
                                          className="ant-select-clear"
                                          onMouseDown={[Function]}
                                          style={
                                            Object {
                                              "WebkitUserSelect": "none",
                                              "userSelect": "none",
                                            }
                                          }
                                          unselectable="on"
                                        >
                                          <ForwardRef(CloseCircleFilled)>
                                            <AntdIcon
                                              icon={
                                                Object {
                                                  "icon": Object {
                                                    "attrs": Object {
                                                      "focusable": "false",
                                                      "viewBox": "64 64 896 896",
                                                    },
                                                    "children": Array [
                                                      Object {
                                                        "attrs": Object {
                                                          "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                        },
                                                        "tag": "path",
                                                      },
                                                    ],
                                                    "tag": "svg",
                                                  },
                                                  "name": "close-circle",
                                                  "theme": "filled",
                                                }
                                              }
                                            >
                                              <span
                                                aria-label="close-circle"
                                                className="anticon anticon-close-circle"
                                                role="img"
                                              >
                                                <IconReact
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "close-circle",
                                                      "theme": "filled",
                                                    }
                                                  }
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    data-icon="close-circle"
                                                    fill="currentColor"
                                                    focusable="false"
                                                    height="1em"
                                                    key="svg-close-circle"
                                                    viewBox="64 64 896 896"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                                                      key="svg-close-circle-svg-0"
                                                    />
                                                  </svg>
                                                </IconReact>
                                              </span>
                                            </AntdIcon>
                                          </ForwardRef(CloseCircleFilled)>
                                        </span>
                                      </TransBtn>
                                    </div>
                                  </ForwardRef(Select)>
                                </Select>
                              </ForwardRef(InternalSelect)>
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </div>
                  </Col>
                </div>
              </Row>
              <Row
                gutter={
                  Array [
                    16,
                    16,
                  ]
                }
                style={
                  Object {
                    "marginTop": "1em",
                  }
                }
              >
                <div
                  className="ant-row"
                  style={
                    Object {
                      "marginBottom": -8,
                      "marginLeft": -8,
                      "marginRight": -8,
                      "marginTop": "1em",
                    }
                  }
                >
                  <Col
                    span={16}
                  >
                    <div
                      className="ant-col ant-col-16"
                      style={
                        Object {
                          "paddingBottom": 8,
                          "paddingLeft": 8,
                          "paddingRight": 8,
                          "paddingTop": 8,
                        }
                      }
                    >
                      <List
                        bordered={true}
                        dataSource={
                          Array [
                            Object {
                              "node": Object {
                                "id": "id",
                                "title": "title",
                              },
                            },
                          ]
                        }
                        renderItem={[Function]}
                      >
                        <div
                          className="ant-list ant-list-split ant-list-bordered"
                        >
                          <Spin
                            size="default"
                            spinning={false}
                            wrapperClassName=""
                          >
                            <div
                              className="ant-spin-nested-loading"
                            >
                              <div
                                className="ant-spin-container"
                                key="container"
                              >
                                <ul
                                  className="ant-list-items"
                                >
                                  <Item
                                    key="id"
                                  >
                                    <li
                                      className="ant-list-item"
                                    >
                                      title
                                    </li>
                                  </Item>
                                </ul>
                              </div>
                            </div>
                          </Spin>
                        </div>
                      </List>
                    </div>
                  </Col>
                  <Col
                    span={8}
                  >
                    <div
                      className="ant-col ant-col-8"
                      style={
                        Object {
                          "paddingBottom": 8,
                          "paddingLeft": 8,
                          "paddingRight": 8,
                          "paddingTop": 8,
                        }
                      }
                    >
                      <Connect(RepoTags)
                        issueState="OPEN"
                        path=""
                      >
                        <RepoTags
                          getRepoIssues={[Function]}
                          getRepoLabels={[Function]}
                          issueState="OPEN"
                          labels={
                            Array [
                              Object {
                                "node": Object {
                                  "name": "bugs",
                                },
                              },
                            ]
                          }
                          path=""
                          selectedLabels={Array []}
                          setSelectedLabels={[Function]}
                        >
                          <Col>
                            <div
                              className="ant-col"
                              style={
                                Object {
                                  "paddingBottom": 8,
                                  "paddingLeft": 8,
                                  "paddingRight": 8,
                                  "paddingTop": 8,
                                }
                              }
                            >
                              <span
                                style={
                                  Object {
                                    "fontSize": "15px",
                                  }
                                }
                              >
                                Issue Labels:
                              </span>
                            </div>
                          </Col>
                          <Col>
                            <div
                              className="ant-col"
                              style={
                                Object {
                                  "paddingBottom": 8,
                                  "paddingLeft": 8,
                                  "paddingRight": 8,
                                  "paddingTop": 8,
                                }
                              }
                            >
                              <CheckableTag
                                checked={false}
                                key="bugs"
                                onChange={[Function]}
                                style={
                                  Object {
                                    "fontSize": "15px",
                                  }
                                }
                              >
                                <span
                                  className="ant-tag ant-tag-checkable"
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "fontSize": "15px",
                                    }
                                  }
                                >
                                  bugs
                                </span>
                              </CheckableTag>
                            </div>
                          </Col>
                        </RepoTags>
                      </Connect(RepoTags)>
                    </div>
                  </Col>
                </div>
              </Row>
            </div>
          </Col>
        </Issues>
      </Connect(Issues)>
    </Router>
  </BrowserRouter>
</Provider>
`;
